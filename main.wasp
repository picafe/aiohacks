
app aio {
  wasp: {
    version: "^0.12.3"
  },
  title: "aio",
  client: {
    rootComponent: import BaseLayout from "@src/BaseLayout.jsx",
  },
  emailSender: {
    provider: SMTP,
  },
  

  auth: {
    userEntity: User,
    methods: {
      
      email: {
        fromField: {
          name: "Portfolio Cafe",
          email: "noreply@picafe.me"
        },
        emailVerification: {
          clientRoute: EmailVerificationRoute,
        },
        passwordReset: {
          clientRoute: PasswordResetRoute,
        },
        userSignupFields: import { userSignupFields } from "@src/auth/signup",

      },

    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  }
}

entity User {=psl
  id          Int     @id @default(autoincrement())
  name String @unique
  greeting String?
  subtitle String?
  header String?
  description String?
  image String?
psl=}




route RootRoute { path: "/", to: MainPage }
page MainPage {
  component: import MainPage from "@src/MainPage"
}

route DashboardRoute { path: "/dashboard", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/DashboardPage.jsx"
}

route DemoRoute { path: "/demo", to: DemoPage }
page DemoPage {
  component: import Demo from "@src/Demo.jsx"
}

route EditorRoute { path: "/editor", to: EditorPage }
page EditorPage {
  authRequired: true,
  component: import EditorPage from "@src/EditorPage.jsx"
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import LoginPage from "@src/auth/LoginPage.jsx"
}

route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import SignupPage from "@src/auth/SignupPage.jsx"
}

route EmailVerificationRoute { path: "/email-verification", to: EmailVerification }
page EmailVerification {
  //component: import EmailVerification from "@src/sourceFile"
  component: import MainPage from "@src/MainPage"
}

route PasswordResetRoute { path: "/password-reset", to: PasswordReset }
page PasswordReset {
  //component: import EmailVerification from "@src/sourceFile"
  component: import MainPage from "@src/MainPage"
}

route PortfolioRoute { path: "/portfolio/:name", to: Portfolio }
page Portfolio {
  component: import PortfolioPage from "@src/PortfolioPage"
}

query getUser {
  // Specifies where the implementation for the query function is.
  // The path `@src/queries` resolves to `src/queries.js`.
  // No need to specify an extension.
  fn: import { getUser } from "@src/queries.js",
  // Tell Wasp that this query reads from the `Task` entity. Wasp will
  // automatically update the results of this query when tasks are modified.
  entities: [User]
}

action editUser {
  fn: import { updateUser } from "@src/actions",
  entities: [User]
}